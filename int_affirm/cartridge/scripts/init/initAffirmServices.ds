/**
 * This script used for defining and configuring Affirm services
 *
 */
var service = require('dw/svc'),
	affirmUtils = require('int_affirm/cartridge/scripts/utils/affirmUtils.ds');

service.ServiceRegistry.configure('affirm.auth', {
	createRequest: function (svc, args) {
		svc.setRequestMethod('POST');
		svc.addHeader('Content-Type', 'application/json');
		if (!empty(args)) {
			return JSON.stringify(args);
		}
	},
	parseResponse: affirmUtils.responseParser
});

service.ServiceRegistry.configure('affirm.void', {
	createRequest: function (svc : HTTPService, args) {
		svc.setRequestMethod('POST');
		svc.addHeader('Content-Type', 'application/json');
		if (!empty(args)) {
			return JSON.stringify(args);
		}
	},
	parseResponse: affirmUtils.responseParser
});

service.ServiceRegistry.configure('affirm.refund', {
	createRequest: function (svc, args) {
		svc.setRequestMethod('POST');
		svc.addHeader('Content-Type', 'application/json');
		if (!empty(args)) {
			return JSON.stringify(args);
		}
	},
	parseResponse: affirmUtils.responseParser
});

service.ServiceRegistry.configure('affirm.capture', {
	createRequest: function (svc, args) {
		svc.setRequestMethod('POST');
		svc.addHeader('Content-Type', 'application/json');
		if (!empty(args)) {
			return JSON.stringify(args);
		}
	},
	parseResponse: affirmUtils.responseParser
});

service.ServiceRegistry.configure('affirm.update', {
	createRequest: function (svc, args) {
		svc.setRequestMethod('POST');
		svc.addHeader('Content-Type', 'application/json');
		if (!empty(args)) {
			return JSON.stringify(args);
		}
	},
	parseResponse: affirmUtils.responseParser
});