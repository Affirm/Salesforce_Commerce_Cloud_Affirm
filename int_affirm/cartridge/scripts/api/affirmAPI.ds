(function () {
	/**
	 * Creates library-wrapper for Affirm API
	 *
	 * @constructor
	 * @this {Api}
	 * @returns Api instance
	 */
	var Api = function () {
		var self = this,
			affirmData = require('int_affirm/cartridge/scripts/data/affirmData.ds'),
			logger = require('dw/system').Logger.getLogger('Affirm', ''),
			service = require('dw/svc');

		/**
		 * Get charge object by token
		 *
		 * @param {string} token that was POSTed to the pipeline COPlaceOrder-Start
		 * @returns {Object} charge object
		 */
		self.auth = function (token) {
			try {
				var affirmService = service.ServiceRegistry.get('affirm.auth');

				affirmService.URL = affirmData.getURLPath() + 'charges';

				return affirmService.call({
						'checkout_token' : token
					}).object;
			} catch (e) {
				logger.error('Affirm. File - affirmAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};

		/**
		 * Capture charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge capture event object
		 */
		self.capture = function (chargeId, captureData) {
			try {
				var affirmService = service.ServiceRegistry.get('affirm.capture');

				affirmService.URL = affirmData.getURLPath() + 'charges/' + chargeId + '/capture';

				return affirmService.call({
						'order_id' : captureData
					}).object;
			} catch (e) {
				logger.error('Affirm. File - affirmAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};

		/**
		 * Void charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge void event object
		 */
		self.void = function (chargeId) {
			try {
				var affirmService = service.ServiceRegistry.get('affirm.void');

				affirmService.URL = affirmData.getURLPath() + 'charges/' + chargeId + '/void';

				return affirmService.call().object;
			} catch (e) {
				logger.error('Affirm. File - affirmAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};

		/**
		 * Refund charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge refund event object
		 */
		self.refund = function (chargeId) {
			try {
				var affirmService = service.ServiceRegistry.get('affirm.refund');

				affirmService.URL = affirmData.getURLPath() + 'charges/' + chargeId + '/refund';

				return affirmService.call().object;
			} catch (e) {
				logger.error('Affirm. File - affirmAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};

		/**
		 * Update order by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge update event object
		 */
		self.update = function (chargeId, updateData) {
			try {
				var affirmService = service.ServiceRegistry.get('affirm.update');

				affirmService.URL = affirmData.getURLPath() + 'charges/' + chargeId + '/update';

				return affirmService.call(updateData).object;
			} catch (e) {
				logger.error('Affirm. File - affirmAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
	};

	module.exports = new Api();
}());
